// Generated by BUCKLESCRIPT VERSION 2.0.1, PLEASE EDIT WITH CARE
'use strict';


var inputFlag = "-i";

function addInput(input, options) {
  return "" + (String(options) + (" " + (String(inputFlag) + (" " + (String(input) + "")))));
}

function overwriteVideo(opt) {
  var match = +opt;
  if (match !== 0) {
    return " -y";
  } else {
    return " -n";
  }
}

function maxFileSize(opt) {
  return " -fs " + opt;
}

function frames(sort, frameType) {
  return " -" + sort + "frames " + frameType;
}

function videoFrames(param) {
  return frames("v", param);
}

function audioFrames(param) {
  return frames("a", param);
}

function startTime(time) {
  return " -ss " + time;
}

function duration(time) {
  return " -t " + time;
}

function framesPerSecond(fps) {
  return " -r " + fps;
}

function disable(opt, _) {
  return " -" + opt + "n";
}

function disableVideo(param) {
  return disable("v", param);
}

function disableAudio(param) {
  return disable("a", param);
}

function muteVideo() {
  return disableAudio(/* () */0);
}

function volume(vol) {
  return "-af \'volume=" + (String(vol) + "\'");
}

function setVideoSpeed(speed) {
  return " -filter:v \"setpts=" + (String(speed) + "*PTS\"");
}

function setAudioSpeed(speed) {
  return " -filter:a \"atempo=" + (String(speed) + "\"");
}

function setCodec(aV, codec) {
  return "-" + aV + "codec " + codec;
}

function setAudioCodec(param) {
  return setCodec("a", param);
}

function setVideoCodec(param) {
  return setCodec("v", param);
}

function setBitrate(aV, codec) {
  return " -b:" + aV + " " + codec + "k";
}

function setVideoBitrate(param) {
  return setBitrate("v", param);
}

function setAudioBitrate(param) {
  return setBitrate("a", param);
}

function setVariableBitrate(vbr) {
  return " - vbr " + vbr;
}

function metaDataFlag(flag, data) {
  return "-metadata \"" + (String(flag) + ("=" + (String(data) + "\"")));
}

var ffmpeg = "ffmpeg";

var seek = startTime;

exports.ffmpeg             = ffmpeg;
exports.inputFlag          = inputFlag;
exports.addInput           = addInput;
exports.overwriteVideo     = overwriteVideo;
exports.maxFileSize        = maxFileSize;
exports.frames             = frames;
exports.videoFrames        = videoFrames;
exports.audioFrames        = audioFrames;
exports.startTime          = startTime;
exports.seek               = seek;
exports.duration           = duration;
exports.framesPerSecond    = framesPerSecond;
exports.disable            = disable;
exports.disableVideo       = disableVideo;
exports.disableAudio       = disableAudio;
exports.muteVideo          = muteVideo;
exports.volume             = volume;
exports.setVideoSpeed      = setVideoSpeed;
exports.setAudioSpeed      = setAudioSpeed;
exports.setCodec           = setCodec;
exports.setAudioCodec      = setAudioCodec;
exports.setVideoCodec      = setVideoCodec;
exports.setBitrate         = setBitrate;
exports.setVideoBitrate    = setVideoBitrate;
exports.setAudioBitrate    = setAudioBitrate;
exports.setVariableBitrate = setVariableBitrate;
exports.metaDataFlag       = metaDataFlag;
/* No side effect */
